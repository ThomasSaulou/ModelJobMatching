from pymongo import MongoClient
from requestJobInfos import getJobDetails,getNoeudSkillDetails, getRacineSkillDetails ,getDomaineDetails, getGrandDomaineDetails
from pprint import pprint
#Step 1: Connect to MongoDB - Note: Change connection string as needed
client = MongoClient(port=27017)
db=client.jobMatching
#Step 2: Create sample data

codes=['M1601','G1702','G1701','G1101','G1205','G1203','G1202','E1101','D1501','A1403','A1402','A1401','K1303','D1505','D1403'
,'D1401','H1101','M1606','N4105','G1605','M1401','N1303','N1105','G1703','G1502','G1501','D1503','D1502',
'N1102','N1103','H3302','D1214','D1212','D1211','D1210','D1209','D1107','D1106','D1506','G1803','G1801','M1603']


listCodeOGR=['10372', '10719', '11743', '15477', '15483', '15484',
 '14754', '15480', '15481', '19518', '19519', '19531', '38514', 
 '11483', '11968', '11970', '14799', '13797', '15430', '15190',
  '14869', '16192', '17896', '18895', '20671', '20502', '20717',
   '20670', '11215', '12015', '12844', '12845', '17975', '38085',
    '10375', '11745', '11747', '13453', '15482', '15485', '15478',
     '15479', '18558', '17663', '19707', '140972', '10416', '10997',
      '11025', '11027', '11259', '10705', '13094', '12873', '15489', 
      '15490', '15488', '14770', '14776', '14772', '15486', '15492', 
      '17063', '17118', '17385', '17386', '17752', '18923', '17741',
       '38785', '10213', '10971', '10973', '10983', '10999', '11000',
        '11001', '11006', '11007', '11021', '11022', '11023', '11024', 
        '11038', '11039', '11040', '11041', '14222', '14224', '14226', 
        '14219', '14225', '16726', '16728', '16727', '16735', '18677', 
        '38057', '38170', '38157', '38158', '38156', '38169', '10976', 
        '10979', '10980', '10981', '10982', '10985', '10986', '10987', 
        '10989', '10990', '10991', '10992', '10993', '10994', '10995',
         '10996', '11005', '11010', '11036', '11037', '11043', '11044', 
         '11046', '11047', '11052', '11059', '16063', '18145', '38577', 
         '38784', '38218', '140945', '38058', '140974', '140973', '11008', 
         '11016', '11070', '11884', '14563', '16718', '20733', '38383',
          '20731', '20725', '126547', '10974', '11035', '11072', '10569',
           '13956', '10898', '10811', '10825', '10829', '10832', '10833',
            '10834', '10835', '10836', '10837', '10838', '10839', '10840', 
            '10841', '17546', '18280', '18282', '19431', '20364', '11710', 
            '10849', '10853', '10807', '10808', '10809', '10812', '10813',
             '13775', '13854', '18279', '18281', '18275', '18276', '18277',
              '18278', '17820', '17818', '17819', '10862', '10864', '10886',
               '10900', '10806', '10810', '10814', '10815', '13855', '13856', 
               '13853', '13857', '13858', '17817', '17892', '20510', '10238',
                '10240', '10854', '11180', '11287', '11304', '11305', '11306',
                 '11307', '11455', '11462', '11480', '10756', '10757', '14750', '15196',
                  '14594', '15383', '14804', '16326', '16999', '38088', '38633', '11640', 
                  '11643', '11644', '11645', '11646', '11647', '11648', '15487', '17598', 
                  '17599', '38575', '38655', '11368', '12160', '13367', '13369', '13373',
                   '13355', '13368', '13371', '13495', '13489', '12738', '13356', '13358', '13364', '13365', '13370', '13366', '13376', '13930', '18336', '38357', '38358', '38362', '38359', '38364', '38365', '38068', '38360', '38361', '38363', '11181', '11186', '11188', '11210', '11266', '11286', '11294', '11389', '12700', '13936', '12748', '13380', '14753', '19369', '19787', '38961', '19649', '38958', '38959', '38960', '14193', '15886', '14961', '15891', '15586', '18559', '19195', '19512', '20276', '18590', '20272', '11406', '13884', '13883', '16731', '17160', '17167', '18251', '19171', '19525', '19526', '20305', '38482', '10877', '12001', '11999', '12860', '11998', '12000', '13337', '12887', '13303', '13294', '13305', '13302', '13304', '12859', '13306', '13336', '16206', '16209', '16208', '16204', '16205', '16207', '200114', '10427', '10826', '10827', '14547', '17846', '17849', '18748', '10659', '10753', '11877', '12438', '12161', '14847', '14840', '14844', '14843', '14841', '14846', '17553', '19561', '20310', '38397', '38939', '11270', '11295', '11058', '11097', '10783', '10800', '12268', '12309', '12203', '12503', '12266', '12455', '12360', '12573', '12504', '13718', '13467', '16211', '19097', '19497', '19746', '20187', '19566', '18532', '20091', '20184', '20244', '19559', '20185', '20182', '20186', '20188', '20189', '20181', '20183', '11484', '10523', '10579', '11950', '11951', '13897', '16366', '16364', '16365', '16355', '16361', '16362', '17894', '11248', '10591', '12072', '12308', '14783', '14780', '16992', '16991', '18320', '18326', '18323', '18940', '18325', '18321', '18324', '18842', '38219', '20507', '10752', '14814', '14796', '14815', '14873', '38083', '38579', '12764', '14775', '14794', '14793', '17979', '20500', '38578', '10270', '10280', '12289', '12283', '12303', '12306', '12307', '12280', '12295', '12301', '12288', '12304', '12286', '12290', '12291', '12299', '12292', '12275', '12285', '16334', '18840', '10269', '10279', '12278', '12293', '12297', '12300', '12294', '12305', '12279', '12287', '12276', '12277', '12281', '12282', '12296', '12302', '12298', '12284', '16337', '16333', '16338', '18838', '18837', '18839', '10875', '11493', '12385', '12437', '13948', '13950', '13947', '13949', '10386', '10479', '10880', '10580', '10605', '10612', '10660', '10661', '10748', '10750', '13639', '14809', '14874', '16280', '16285', '14922', '14810', '14740', '14755', '16277', '16283', '16289', '16287', '16288', '16278', '16276', '16281', '16282', '16284', '16290', '16066', '17993', '18032', '16286', '17240', '18317', '18319', '18318', '18040', '38676', '10405', '10406', '10421', '10453', '10458', '10729', '10730', '12848', '14555', '17180', '17100', '17066', '17072', '20449', '20464', '20443', '20453', '20461', '20451', '20702', '20546', '20566', '20584', '20538', '20549', '20569', '24858', '20608', '38382', '20616', '20551', '20557', '20605', '20609', '20600', '38215', '20556', '20583', '20606', '20613', '20614', '20596', '20615', '13869', '14535', '18262', '20547', '20561', '20573', '20610', '20521', '20536', '20555', '20574', '20619', '20625', '20595', '20630', '38327', '38381', '20601', '20607', '20537', '20579', '20599', '20603', '20532', '20541', '20611', '20618', '20629', '20523', '20553', '20565', '20585', '20587', '20563', '20604', '20626', '38572', '20597', '11609', '14500', '16140', '16181', '20552', '20571', '20588', '20590', '20515', '20550', '20578', '20624', '20554', '38080', '20527', '20575', '20512', '20580', '20598', '20628', '20562', '20572', '20592', '20591', '20593', '20548', '38494', '20594', '20620', '20621', '38133', '140929', '20511', '20544', '20520', '20542', '20539', '38630', '20617', '15095', '15097', '20589', '20524', '20643', '20602', '20534', '20519', '10861', '12744', '12767', '20582', '20513', '20531', '20516', '20641', '140971', '14863', '16388', '20525', '20645', '20540', '20558', '20564', '20623', '20635', '20559', '20560', '20612', '20646', '20577', '20567', '20568', '20570', '20576', '20622', '20530', '20627', '38776', '16389', '17355', '19130', '18866', '18202', '18867', '20085', '20088', '38995', '12761', '12274', '12760', '13951', '15191', '15491', '19428', '19427', '19424', '19430', '38899', '38581', '38582', '38900', '38901', '11494', '11639', '12004', '12753', '14214', '14758', '14972', '15278', '15192', '14971', '14975', '15276', '15188', '14974', '14998', '19429', '18661', '19426', '19425', '18662', '200104', '10472', '10473', '10474', '11098', '10723', '10724', '10735', '12445', '12722', '14501', '14505', '14502', '14504', '14749', '14507', '14503', '14509', '15044', '15049', '14506', '14508', '18329', '17893', '19558', '20499']
#for code in listCodeOGR:
    #jobOGR=getJobDetails(code)
    #result = db.jobSheet.insert_one(jobOGR)

def addSkillstoBdd():
    client = MongoClient(port=27017)
    db=client.jobMatching
    listSkills=[]
    n=0
    m=0
    for job in db.jobSheet.find({}):
        skills=job['competencesDeBase']
        print(n)
        n+=1
        for skill in skills:
            print(m)
            m+=1

            print(db.skills.find_one({'code':skill['code']}))
            if(db.skills.find_one({'code':skill['code']})):
                nothing=0
            else :
                if (skill['typeCompetence']=='SavoirFaire'):
                    riasecMineur=skill['riasecMineur']
                    riasecMajeur=skill['riasecMajeur']
                else :
                    riasecMineur=None
                    riasecMajeur=None
                objetskill={
                    'code':skill['code'],
                    'name':skill['libelle'],
                    'node':skill['noeudCompetence']['code'],
                    'root':skill['noeudCompetence']['racineCompetence']['code'],
                    'type':skill['typeCompetence'],
                    'riasecMineur':riasecMineur,
                    'riasecMajeur':riasecMajeur
                }
                db.skills.insert_one(objetskill)

nodes=['00004', '00005', '00006', '00007', '00008', '00011', '00012', '00016', '00017', '00018', '00021', '00022', '00035', '00043', '00044', '00049', '00056', '00057', '00059', '00068', '00069', '00071', '00078', '00079', '00081', '00082', '00085', '00092', '00097', '00098', '00102', '00105', '00106', '00111', '00121', '00123', '00134', '00136', '00137', '00138', '00143', '00145', '00153', '00154', '00161', '00165', '00168', '00170', '00172', '00173', '00175', '00179', '00182', '00186', '00187', '00190', '00193', '00195', '00203', '00204', '00205', '00206', '00208', '00211', '00219', '00221', '00222', '00223', '00224', '00239', '00245', '00252', '00253', '00254', '00261', '00263', '00266', '00277', '00278', '00280', '00283', '00284', '00286', '00291', '00295', '00296', '00298', '00299', '00300', '00303', '00305', '00306', '00309', '00311', '00313', '00316', '00318', '00319', '00321', '00324', '00327', '00331', '00334', '00337', '00341', '00342', '00348', '00352', '00358', '00359', '00361', '00362', '00365', '00366', '00367']
root=['00001', '00002', '00004', '00005', '00007', '00008', '00010', '00012', '00013', '00017', '00019', '00021', '00022', '00025', '00026', '00028', '00029', '00030', '00031', '00032', '00034', '00036', '00038', '00039', '00042', '00045', '00046', '00047', '00048', '00049', '00052', '00054', '00055']
#print(db.skills.distinct("root"))

def addNodeSkillsToBdd():
    client = MongoClient(port=27017)
    db=client.jobMatching
    db.skills.distinct("node")
    for node in nodes:
        nodeInfos=getNoeudSkillDetails(node)
        listSkills=[]
        for skill in nodeInfos:
            listSkills.append(skill['code'])

        objetNode={
            'code':nodeInfos[0]['noeudCompetence']['code'],
            'name':nodeInfos[0]['noeudCompetence']['libelle'],
            'root':nodeInfos[0]['noeudCompetence']['racineCompetence']['code'],
            'listSkills':listSkills,
            'count':len(listSkills)
        }
        db.skillsNode.insert_one(objetNode)


def addRootSkillsToBdd():
    client = MongoClient(port=27017)
    db=client.jobMatching
    roots=db.skillsNode.distinct("root")
    for root in roots:
        rootsInfos=getRacineSkillDetails(root)
        listSkills=[]
        for root in rootsInfos:
            listSkills.append(root['code'])

        objetNode={
            'code':rootsInfos[0]['racineCompetence']['code'],
            'name':rootsInfos[0]['racineCompetence']['libelle'],
            'listSkills':listSkills,
            'count':len(listSkills)
        }
        db.skillsRoot.insert_one(objetNode)


def addDomainesToBdd():
    client = MongoClient(port=27017)
    db=client.jobMatching
    domaines=db.jobSheet.distinct("metier.domaineProfessionnel.code")
    for domaine in domaines:
        domaineInfos=getDomaineDetails(domaine)
        listJob=[]
        for job in domaineInfos:
            listJob.append(job['code'])

        objetNode={
            'code':domaineInfos[0]['domaineProfessionnel']['code'],
            'name':domaineInfos[0]['domaineProfessionnel']['libelle'],
            'grandDomaine':domaineInfos[0]['domaineProfessionnel']['grandDomaine']['code'],
            'listSkills':listJob,
            'count':len(listJob)
        }
        db.domaineSheet.insert_one(objetNode)

def addGrandsDomainesToBdd():
    client = MongoClient(port=27017)
    db=client.jobMatching
    domaines=db.domaineSheet.distinct("grandDomaine")
    print(domaines)
    for domaine in domaines:
        domaineInfos=getGrandDomaineDetails(domaine)
        listJob=[]
        for job in domaineInfos:
            listJob.append(job['code'])

        objetNode={
            'code':domaineInfos[0]['grandDomaine']['code'],
            'name':domaineInfos[0]['grandDomaine']['libelle'],
            'listSkills':listJob,
            'count':len(listJob)
        }
        db.grandDomaineSheet.insert_one(objetNode)

addGrandsDomainesToBdd()